{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","model3","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uploadFlagToServer","text","probabilities","flagged","thiz","event","console","log","state","flagged_sentences","includes","new_flagged_sentences","push","setState","apiURL","Date","getTime","fetch","then","response","responseData","catch","err","classifyText","assertThisInitialized","document","getElementById","value","sentence","classify","predictions","preds","probas","maxi","maxv","i","results","uploadDataToServer","cur_sentences","sentences","unshift","pred","proba","participantid","now","labelsToInclude","window","toxicity","load","model2","_this2","react_default","a","createElement","className","id","placeholder","onClick","map","key","href","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fd028c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nvar model3;\n\nfunction uploadDataToServer(text,probabilities) {\n    var d = new Date();\n    var n = d.getTime();\n\n    var apiURL = 'https://script.google.com/macros/s/AKfycbwK3EEp-8NU7wLEXLrZesp7XcjUYh7H6zdgQj7vBfDpDlwa13gl/exec?'\n    apiURL += \"timest=\"+n\n    apiURL += \"&sentence=\"+text\n    apiURL += \"&bd=\"+probabilities[0]\n    apiURL += \"&cmd=\"+probabilities[1]\n    apiURL += \"&lp=\"+probabilities[2]\n    apiURL += \"&nt=\"+probabilities[3]\n    apiURL += \"&neutral=\"+probabilities[4]\n    apiURL += \"&qu=\"+probabilities[5]\n    apiURL += \"&rf=\"+probabilities[6]\n    apiURL += \"&up=\"+probabilities[7]\n\n    const formData = {};\n    console.log(\"uploading data\")\n    fetch(apiURL).then((response) => response.text())\n      .then((responseData) => { \n        console.log(\"response: \");\n        console.log(responseData); })\n      .catch((err) => { \n        console.log(err); \n      });\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      participantid: Date.now(),\n      sentences: [{text:\"What are you doing?\",pred:[0,0,0,0,0,1,0,0],proba:[1,1,1,1,1,0,1,1]}],\n      flagged_sentences: []\n    }\n  }\n\n  async componentDidMount() {\n\n    const threshold = 0.7;\n    const labelsToInclude = [\"unlabelled_praise\",\"command\",\"neutral_talk\",\"labelled_praise\",\"question\",\"behavior_description\",\"reflection\",\"negative_talk\"];\n\n    window.toxicity.load(threshold, labelsToInclude).then(model2 => {\n      model3 = model2\n    });\n    \n  }\n  componentWillUnmount() {}\n\n  uploadFlagToServer = (text,probabilities,flagged,thiz)  => (event) => {\n    console.log(\"uploadFlagToServer\")\n    if(flagged == 1){\n      if(thiz.state.flagged_sentences.includes(text)) {\n        return\n      }\n    }\n    var new_flagged_sentences = thiz.state.flagged_sentences;\n    new_flagged_sentences.push(text)\n    thiz.setState({flagged_sentences: new_flagged_sentences})\n    var d = new Date();\n    var n = d.getTime();\n\n    var apiURL = 'https://script.google.com/macros/s/AKfycbwK3EEp-8NU7wLEXLrZesp7XcjUYh7H6zdgQj7vBfDpDlwa13gl/exec?'\n    apiURL += \"timest=\"+n\n    apiURL += \"&sentence=\"+text\n    apiURL += \"&bd=\"+probabilities[0]\n    apiURL += \"&cmd=\"+probabilities[1]\n    apiURL += \"&lp=\"+probabilities[2]\n    apiURL += \"&nt=\"+probabilities[3]\n    apiURL += \"&neutral=\"+probabilities[4]\n    apiURL += \"&qu=\"+probabilities[5]\n    apiURL += \"&rf=\"+probabilities[6]\n    apiURL += \"&up=\"+probabilities[7]\n    apiURL += \"&flagged=\"+flagged\n\n    const formData = {};\n    console.log(\"uploading data\")\n    fetch(apiURL).then((response) => response.text())\n      .then((responseData) => { \n        console.log(\"response: \");\n        console.log(responseData); })\n      .catch((err) => { \n        console.log(err); \n      });\n  }\n\n  classifyText = () => (event) => {\n    var thiz = this;\n    console.log(document.getElementById(\"classify-new-text-input\").value)\n    var sentence = document.getElementById(\"classify-new-text-input\").value;\n    model3.classify([sentence])\n      .then(predictions => {\n        console.log(predictions)\n        var preds = []\n        var probas = []\n        var maxi = 0\n        var maxv = 1\n\n        for(var i = 0; i < 8; i++) {\n          //predictions[i].results[0].probabilities[0]\n          if (predictions[i].results[0].probabilities[0] < maxv){\n            maxi = i\n            maxv = predictions[i].results[0].probabilities[0]\n          }\n          console.log(predictions[i].results[0].probabilities[0])\n          if (predictions[i].results[0].probabilities[0] > 0.9) {\n            preds.push(1)\n          } else {\n            preds.push(0)\n          }\n          probas.push(predictions[i].results[0].probabilities[0])\n        }\n        preds = [0,0,0,0,0,0,0,0]\n        preds[maxi] = 1\n        uploadDataToServer(sentence,probas)\n        console.log(preds)\n        //var preds = [0,0,0,0,1,0,0,0]\n        var cur_sentences = thiz.state.sentences\n        cur_sentences.unshift({text:sentence,pred:preds,proba:probas})\n        thiz.setState({sentence: cur_sentences})\n        return true;\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">          \n    <h1>DPICS coding demo</h1>\n    <div className=\"description\">\n      This is a demo of the text classification model that codes parent-child interaction according to the DPICS. The samples below illustrate the coding output of the model.\n    </div>\n    <p>Enter your sentence below and click 'Code' to code it according to the DPICS.</p>\n    <div>\n      <input id=\"classify-new-text-input\" placeholder=\"i.e. 'Come play with me'\"/>\n      <div id=\"classify-new-text\" onClick={this.classifyText()}>Code</div>\n    </div>\n    <div id=\"table-wrapper\">\n      <div className=\"row\">\n        <div className=\"text\">Parent Sentence</div>\n\n        <div className=\"label\">Behavior Description</div>\n        <div className=\"label\">Command</div>\n        <div className=\"label\">Labeled Praise</div>\n        <div className=\"label\">Negative Talk</div>\n        <div className=\"label\">Neutral Talk</div>\n        <div className=\"label\">Question</div>\n        <div className=\"label\">Reflection</div>\n        <div className=\"label\">Unlabeled Praise</div>\n        <div className=\"label\">Wrong code?</div>\n      </div>\n      {this.state.sentences.map((value, key) => (\n        <div className=\"row\">\n          <div className=\"text\">{value.text}</div>\n          {value.pred[0] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[1] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[2] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[3] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[4] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[5] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[6] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[7] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          <div className=\"label\"><div className=\"flag-btn\" onClick={this.uploadFlagToServer(value.text,value.proba,1,this)}>Flag this</div></div>\n        </div>\n      ))}\n    </div>\n          <h2>The related paper is published at PervasiveHealth 2019:</h2>\n          <p>We studied this coding tool as a system to help parents communicate. Make sure to check out our <a href=\"https://scholar.harvard.edu/files/bhb/files/specialtime_final_pervasivehealth19.pdf\">paper</a> for more details.</p>\n          <p>Created by: <a href=\"https://scholar.harvard.edu/bhb\">Bernd Huber</a></p>\n      </div>\n    );\n  }\n}\n/*\n\n      <div className=\"row\">\n        <div className=\"text\">Parent Sentence</div>\n        <div className=\"label\">Unlabelled Praise</div>\n        <div className=\"label\">Command</div>\n        <div className=\"label\">Neutral Talk</div>\n        <div className=\"label\">Labelled Praise</div>\n        <div className=\"label\">Question</div>\n        <div className=\"label\">Behavior Description</div>\n        <div className=\"label\">Reflection</div>\n        <div className=\"label\">Negative Talk</div>\n      </div>\n*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
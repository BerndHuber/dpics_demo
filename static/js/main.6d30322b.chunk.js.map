{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","model3","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","classifyText","event","thiz","assertThisInitialized","console","log","document","getElementById","value","sentence","classify","then","predictions","preds","probas","i","results","probabilities","push","text","apiURL","Date","getTime","fetch","response","responseData","catch","err","uploadDataToServer","cur_sentences","state","sentences","unshift","pred","setState","participantid","now","window","tf","loadGraphModel","labelsToInclude","toxicity","load","model2","react_default","a","createElement","className","id","placeholder","onClick","map","key","href","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d30322b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst MODEL_URL = './dpics_jsonb/model.json';\nvar model3;\n\nfunction uploadDataToServer(text,probabilities) {\n    var d = new Date();\n    var n = d.getTime();\n\n    var apiURL = 'https://script.google.com/macros/s/AKfycbwK3EEp-8NU7wLEXLrZesp7XcjUYh7H6zdgQj7vBfDpDlwa13gl/exec?'\n    apiURL += \"timest=\"+n\n    apiURL += \"&sentence=\"+text\n    apiURL += \"&up=\"+probabilities[0]\n    apiURL += \"&neutral=\"+probabilities[1]\n    apiURL += \"&lp=\"+probabilities[2]\n    apiURL += \"&qu=\"+probabilities[3]\n    apiURL += \"&bd=\"+probabilities[4]\n    apiURL += \"&rf=\"+probabilities[5]\n    apiURL += \"&up=\"+probabilities[6]\n    apiURL += \"&nt=\"+probabilities[7]\n\n    const formData = {};\n    console.log(\"uploading data\")\n    fetch(apiURL).then((response) => response.text())\n      .then((responseData) => { \n        console.log(\"response: \");\n        console.log(responseData); })\n      .catch((err) => { \n        console.log(err); \n      });\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      participantid: Date.now(),\n      sentences: [{text:\"What are you doing?\",pred:[0,0,0,0,1,0,0,0]}]\n    }\n  }\n\n  async componentDidMount() {\n    \n    const model = await window.tf.loadGraphModel(MODEL_URL);\n\n    const threshold = 0.7;\n    const labelsToInclude = [\"unlabelled_praise\",\"command\",\"neutral_talk\",\"labelled_praise\",\"question\",\"behavior_description\",\"reflection\",\"negative_talk\"];\n\n    window.toxicity.load(threshold, labelsToInclude).then(model2 => {\n      model3 = model2\n    });\n    \n  }\n  componentWillUnmount() {}\n\n  classifyText = () => (event) => {\n    var thiz = this;\n    console.log(document.getElementById(\"classify-new-text-input\").value)\n    var sentence = document.getElementById(\"classify-new-text-input\").value;\n    model3.classify([sentence])\n      .then(predictions => {\n        console.log(predictions)\n        var preds = []\n        var probas = []\n        for(var i = 0; i < 8; i++) {\n          //predictions[i].results[0].probabilities[0]\n          console.log(predictions[i].results[0].probabilities[0])\n          if (predictions[i].results[0].probabilities[0] < 0.81) {\n            preds.push(1)\n          } else {\n            preds.push(0)\n          }\n          probas.push(predictions[i].results[0].probabilities[0])\n        }\n        uploadDataToServer(sentence,probas)\n        console.log(preds)\n        //var preds = [0,0,0,0,1,0,0,0]\n        var cur_sentences = thiz.state.sentences\n        cur_sentences.unshift({text:sentence,pred:preds})\n        thiz.setState({sentence: cur_sentences})\n        return true;\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">          \n    <h1>DPICS classifier demo</h1>\n    <div className=\"description\">\n      This is a demo of the text classification model that classifies parent-child interaction according to the DPICS. The samples below illustrate the classification output of the model.\n    </div>\n    <p>Enter your sentence below and click 'Classify' to classify it according to the DPICS.</p>\n    <div>\n      <input id=\"classify-new-text-input\" placeholder=\"i.e. 'Come play with me'\"/>\n      <div id=\"classify-new-text\" onClick={this.classifyText()}>Classify</div>\n    </div>\n    <div id=\"table-wrapper\">\n      <div className=\"row\">\n        <div className=\"text\">Parent Sentence</div>\n        <div className=\"label\">Unlabelled Praise</div>\n        <div className=\"label\">Command</div>\n        <div className=\"label\">Neutral Talk</div>\n        <div className=\"label\">Labelled Praise</div>\n        <div className=\"label\">Question</div>\n        <div className=\"label\">Behavior Description</div>\n        <div className=\"label\">Reflection</div>\n        <div className=\"label\">Negative Talk</div>\n      </div>\n      {this.state.sentences.map((value, key) => (\n        <div className=\"row\">\n          <div className=\"text\">{value.text}</div>\n          {value.pred[0] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[1] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[2] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[3] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[4] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[5] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[6] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n          {value.pred[7] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n        </div>\n      ))}\n    </div>\n          <h2>The related paper is published at PervasiveHealth 2019:</h2>\n          <p>We studied the classifier as a tool to help parents communicate. Make sure to check out our <a href=\"https://todo\">paper</a> for more details.</p>\n          <p>Created by: <a href=\"https://scholar.harvard.edu/bhb\">Bernd Huber</a></p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
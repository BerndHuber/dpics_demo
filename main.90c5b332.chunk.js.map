{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","model3","results_chart","recognition","SpeechRecognition","window","webkitSpeechRecognition","da_counts","in_meeting","updateFeedback","data","datasets","update","uploadDataToServer","text","probabilities","apiURL","Date","getTime","console","log","fetch","then","response","responseData","catch","err","continuous","onresult","event","current","resultIndex","transcript","results","sentence","classify","predictions","maxi","maxv","probas","i","push","prediction","onstart","onspeechend","stop","setTimeout","start","onerror","error","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uploadFlagToServer","flagged","thiz","state","flagged_sentences","includes","new_flagged_sentences","setState","handleEnglishClick","lan","handleJapaneseClick","classifyText","assertThisInitialized","document","getElementById","value","encodeURI","japanese","json","preds","cur_sentences","sentences","unshift","pred","proba","participantid","now","url_string","location","href","url","URL","searchParams","get","labelsToInclude","toxicity","load","model2","Chart","type","labels","label","backgroundColor","options","legend","display","scales","yAxes","ticks","fontSize","suggestedMin","labelString","_this2","react_default","a","createElement","className","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","placeholder","map","key","style","width","height","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90c5b332.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nvar model3;\nvar results_chart;\n\nvar SpeechRecognition = window.webkitSpeechRecognition;\n  \nvar recognition = new SpeechRecognition();\n\nvar da_counts = [0,0,0,0,0,0,0,0];\nvar all_text = \"\"\nvar in_meeting = 0;\n\nrecognition.continuous = true;\n\nrecognition.onresult = function(event) {\n  var current = event.resultIndex;\n  var transcript = event.results[current][0].transcript;\n  all_text += \";\" + transcript\n  var classname = classify_speech(transcript)\n};\n\nrecognition.onstart = function() { \n  console.log('Voice recognition is ON.');\n}\n\nrecognition.onspeechend = function() {\n  console.log('No activity.');\n  recognition.stop();\n  if (in_meeting == 1){\n  setTimeout(\n    function() {\n      recognition.start();\n      console.log(\"speech started\")\n    }, 500);\n  }\n}\n\nrecognition.onerror = function(event) {\n  if(event.error == 'no-speech') {\n    console.log('Try again.');  \n    recognition.stop();\n    if (in_meeting == 1){\n      setTimeout(\n        function() {\n          recognition.start();\n          console.log(\"speech started\")\n        }, 500);\n    }\n  }\n}\n\nfunction startMeeting() {\n  recognition.start();\n  in_meeting = 1;\n}\n\nfunction stopMeeting() {\n  recognition.stop();\n  in_meeting = 0;\n}\n\nfunction resetMeeting() {\n  da_counts = [0,0,0,0,0,0,0,0];\n  all_text = \"\";\n  updateFeedback();\n}\n\nfunction updateFeedback() {\n  results_chart.data.datasets[0].data = da_counts;\n  results_chart.update();\n}\n\nfunction classify_speech(sentence) {\n  //this is only english\n  model3.classify([sentence])\n  .then(predictions => {\n    var ind_mapping = [0,5,2,3,6,4,1,7]\n    var preds = []\n    var maxi = 0\n    var maxv = 1\n    var probas = [];\n\n    for(var i = 0; i < 8; i++) {\n      if (predictions[i].results[0].probabilities[0] < maxv){\n        maxi = i\n        maxv = predictions[i].results[0].probabilities[0]\n      }\n      console.log(predictions[i].results[0].probabilities[0])\n      probas.push(predictions[i].results[0].probabilities[0])\n    }\n    console.log(\"--\")\n    var prediction = ind_mapping[maxi]\n    da_counts[prediction] += 1\n    uploadDataToServer(\"speech:\"+sentence,probas)\n    updateFeedback();\n    return true;\n  });\n}\n\nfunction uploadDataToServer(text,probabilities) {\n    var d = new Date();\n    var n = d.getTime();\n\n    var apiURL = 'https://script.google.com/macros/s/AKfycbwK3EEp-8NU7wLEXLrZesp7XcjUYh7H6zdgQj7vBfDpDlwa13gl/exec?'\n    apiURL += \"timest=\"+n\n    apiURL += \"&sentence=\"+text\n    apiURL += \"&bd=\"+probabilities[0]\n    apiURL += \"&cmd=\"+probabilities[1]\n    apiURL += \"&lp=\"+probabilities[2]\n    apiURL += \"&nt=\"+probabilities[3]\n    apiURL += \"&neutral=\"+probabilities[4]\n    apiURL += \"&qu=\"+probabilities[5]\n    apiURL += \"&rf=\"+probabilities[6]\n    apiURL += \"&up=\"+probabilities[7]\n\n    const formData = {};\n    console.log(\"uploading data\")\n    fetch(apiURL).then((response) => response.text())\n      .then((responseData) => { \n        console.log(\"response: \");\n        console.log(responseData); })\n      .catch((err) => { \n        console.log(err); \n      });\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      participantid: Date.now(),\n      sentences: [{text:\"What are you doing?\",pred:[0,0,0,0,0,1,0,0],proba:[1,1,1,1,1,0,1,1]}],\n      flagged_sentences: [],\n      lan: \"en\"\n    }\n  }\n\n  async componentDidMount() {\n\n    var url_string = window.location.href\n    var url = new URL(url_string);\n    var c = url.searchParams.get(\"ln\");\n\n    if(c == \"ja\"){\n      this.setState({\n        lan:\"ja\",\n        sentences: [{text:\"何してるの？\",pred:[0,0,0,0,0,1,0,0],proba:[1,1,1,1,1,0,1,1]}]\n      })\n    }\n\n    const threshold = 0.7;\n    const labelsToInclude = [\"unlabelled_praise\",\"command\",\"neutral_talk\",\"labelled_praise\",\"question\",\"behavior_description\",\"reflection\",\"negative_talk\"];\n\n    window.toxicity.load(threshold, labelsToInclude).then(model2 => {\n      model3 = model2\n    });\n\n    // Bar chart\n    results_chart = new window.Chart(document.getElementById(\"bar-chart\"), {\n        type: 'bar',\n        data: {\n          labels: [\"Behavior Description\",\"Reflection\",\"Labeled Praise\",\"Negative Talk\",\"Question\",\"Command\",\"Neutral Talk\",\"Unlabeled Praise\"],\n          datasets: [\n            {\n              label: \"Fraction (%)\",\n              backgroundColor: [\"#3e95cd\", \"#3e95cd\", \"#3e95cd\",\"#ed4337\",\"#ed4337\",\"#ed4337\",\"#d3d3d3\",\"#d3d3d3\"],\n              data: [0,0,0,0,0,0,0,0]\n            }\n          ]\n        },\n        options: {\n          legend: { display: false },\n          scales: {\n              yAxes: [{\n                  ticks: {\n                      fontSize: 20,\n                      suggestedMin: 0\n                  }\n              }],\n              labelString: \"DPICS counts\"\n          }\n        }\n    });\n    \n  }\n  componentWillUnmount() {}\n\n  uploadFlagToServer = (text,probabilities,flagged,thiz)  => (event) => {\n    console.log(\"uploadFlagToServer\")\n    if(flagged == 1){\n      if(thiz.state.flagged_sentences.includes(text)) {\n        return\n      }\n    }\n    var new_flagged_sentences = thiz.state.flagged_sentences;\n    new_flagged_sentences.push(text)\n    thiz.setState({flagged_sentences: new_flagged_sentences})\n    var d = new Date();\n    var n = d.getTime();\n\n    var apiURL = 'https://script.google.com/macros/s/AKfycbwK3EEp-8NU7wLEXLrZesp7XcjUYh7H6zdgQj7vBfDpDlwa13gl/exec?'\n    apiURL += \"timest=\"+n\n    apiURL += \"&sentence=\"+text\n    apiURL += \"&bd=\"+probabilities[0]\n    apiURL += \"&cmd=\"+probabilities[1]\n    apiURL += \"&lp=\"+probabilities[2]\n    apiURL += \"&nt=\"+probabilities[3]\n    apiURL += \"&neutral=\"+probabilities[4]\n    apiURL += \"&qu=\"+probabilities[5]\n    apiURL += \"&rf=\"+probabilities[6]\n    apiURL += \"&up=\"+probabilities[7]\n    apiURL += \"&flagged=\"+flagged\n\n    const formData = {};\n    console.log(\"uploading data\")\n    fetch(apiURL).then((response) => response.text())\n      .then((responseData) => { \n        console.log(\"response: \");\n        console.log(responseData); })\n      .catch((err) => { \n        console.log(err); \n      });\n  }\n\n  handleEnglishClick = () => (event) => {\n    this.setState({lan:\"en\"})\n  }\n\n  handleJapaneseClick = () => (event) => {\n    this.setState({lan:\"ja\"})\n  }\n\n  classifyText = () => (event) => {\n    var thiz = this;\n    console.log(document.getElementById(\"classify-new-text-input\").value)\n    var sentence = document.getElementById(\"classify-new-text-input\").value;\n    if (thiz.state.lan == \"ja\") {\n      //first we translate the sentence\n      var apiURL = \"https://translate.googleapis.com/translate_a/single?client=gtx&sl=ja&tl=en&dt=t&q=\" + encodeURI(sentence)\n      var japanese = sentence;\n      fetch(apiURL).then((response) => response.json())\n        .then((responseData) => {\n          sentence = responseData[0][0][0]//this is now the translated sentence\n          model3.classify([sentence])\n          .then(predictions => {\n            console.log(predictions)\n            var preds = []\n            var probas = []\n            var maxi = 0\n            var maxv = 1\n\n            for(var i = 0; i < 8; i++) {\n              //predictions[i].results[0].probabilities[0]\n              if (predictions[i].results[0].probabilities[0] < maxv){\n                maxi = i\n                maxv = predictions[i].results[0].probabilities[0]\n              }\n              console.log(predictions[i].results[0].probabilities[0])\n              if (predictions[i].results[0].probabilities[0] > 0.9) {\n                preds.push(1)\n              } else {\n                preds.push(0)\n              }\n              probas.push(predictions[i].results[0].probabilities[0])\n            }\n            preds = [0,0,0,0,0,0,0,0]\n            preds[maxi] = 1\n            uploadDataToServer(\"jap:\"+japanese+\";\"+sentence,probas)\n            console.log(preds)\n            //var preds = [0,0,0,0,1,0,0,0]\n            var cur_sentences = thiz.state.sentences\n            cur_sentences.unshift({text:japanese,pred:preds,proba:probas})\n            thiz.setState({sentence: cur_sentences})\n            return true;\n          });\n        })\n        .catch((err) => { \n          console.log(err); \n        });\n    } else {\n      model3.classify([sentence])\n        .then(predictions => {\n          console.log(predictions)\n          var preds = []\n          var probas = []\n          var maxi = 0\n          var maxv = 1\n\n          for(var i = 0; i < 8; i++) {\n            //predictions[i].results[0].probabilities[0]\n            if (predictions[i].results[0].probabilities[0] < maxv){\n              maxi = i\n              maxv = predictions[i].results[0].probabilities[0]\n            }\n            console.log(predictions[i].results[0].probabilities[0])\n            if (predictions[i].results[0].probabilities[0] > 0.9) {\n              preds.push(1)\n            } else {\n              preds.push(0)\n            }\n            probas.push(predictions[i].results[0].probabilities[0])\n          }\n          preds = [0,0,0,0,0,0,0,0]\n          preds[maxi] = 1\n          uploadDataToServer(sentence,probas)\n          console.log(preds)\n          //var preds = [0,0,0,0,1,0,0,0]\n          var cur_sentences = thiz.state.sentences\n          cur_sentences.unshift({text:sentence,pred:preds,proba:probas})\n          thiz.setState({sentence: cur_sentences})\n          return true;\n        });\n    }\n  }\n\n  render() {\n\n    if(this.state.lan == \"ja\"){\n    return (\n        <div className=\"main\">\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n          </div>\n          <div className=\"col-4\">\n            <h1>DPICSコーディングデモ</h1>\n          </div>\n          <div className=\"col-3\">\n          </div>\n          <div className=\"col-1\">\n            <div className=\"dropdown\">\n              <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Language (言語)\n              </button>\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a className=\"dropdown-item\" onClick={this.handleEnglishClick()}>English</a>\n                <a className=\"dropdown-item\" onClick={this.handleJapaneseClick()}>日本人 (Japanese)</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"description\">\n        これは、DPICSに従って親子相互作用をコード化したテキスト分類モデルのデモです。以下のサンプルは、モデルのコーディング出力を示しています。\n      </div>\n      <p>下に日本語で文章を入力し、「コード」をクリックしてDPICSに従ってコード化してください。</p>\n      <div>\n        <input id=\"classify-new-text-input\" placeholder=\"すなわち「私と遊ぼう」\"/>\n        <div id=\"classify-new-text\" onClick={this.classifyText()}>コード</div>\n      </div>\n      <div id=\"table-wrapper\">\n        <div className=\"row\">\n          <div className=\"text\">親の文</div>\n\n          <div className=\"label\">動作説明</div>\n          <div className=\"label\">コマンド</div>\n          <div className=\"label\">ラベル付きの賞賛</div>\n          <div className=\"label\">ネガティブトーク</div>\n          <div className=\"label\">ニュートラルトーク</div>\n          <div className=\"label\">質問</div>\n          <div className=\"label\">反射</div>\n          <div className=\"label\">ラベルなし称賛</div>\n          <div className=\"label\">不正なコード？</div>\n        </div>\n        {this.state.sentences.map((value, key) => (\n          <div className=\"row\">\n            <div className=\"text\">{value.text}</div>\n            {value.pred[0] == 1 ? <div className=\"label positive\">おそらく</div> : <div className=\"label\">ありそうもない</div>}\n            {value.pred[1] == 1 ? <div className=\"label positive\">おそらく</div> : <div className=\"label\">ありそうもない</div>}\n            {value.pred[2] == 1 ? <div className=\"label positive\">おそらく</div> : <div className=\"label\">ありそうもない</div>}\n            {value.pred[3] == 1 ? <div className=\"label positive\">おそらく</div> : <div className=\"label\">ありそうもない</div>}\n            {value.pred[4] == 1 ? <div className=\"label positive\">おそらく</div> : <div className=\"label\">ありそうもない</div>}\n            {value.pred[5] == 1 ? <div className=\"label positive\">おそらく</div> : <div className=\"label\">ありそうもない</div>}\n            {value.pred[6] == 1 ? <div className=\"label positive\">おそらく</div> : <div className=\"label\">ありそうもない</div>}\n            {value.pred[7] == 1 ? <div className=\"label positive\">おそらく</div> : <div className=\"label\">ありそうもない</div>}\n            <div className=\"label\"><div className=\"flag-btn\" onClick={this.uploadFlagToServer(value.text,value.proba,1,this)}>偽コード</div></div>\n          </div>\n        ))}\n      </div>\n\n      <h2>関連論文はPervasiveHealth 2019に掲載されています。</h2>\n      <p>私たちは親がコミュニケーションをとるのを助けるためのシステムとしてこのコーディングツールを研究しました。詳細については、<a href=\"https://scholar.harvard.edu/files/bhb/files/specialtime_final_pervasivehealth19.pdf\">ホワイトペーパー</a>をご覧ください。\n      </p>\n      <p>作成者：<a href=\"https://scholar.harvard.edu/bhb\"> Bernd Huber </a></p>\n      </div>\n      );\n    } else {\n      return (\n        <div className=\"main\">\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n          </div>\n          <div className=\"col-4\">\n            <h1>DPICS coding demo</h1>\n          </div>\n          <div className=\"col-3\">\n          </div>\n          <div className=\"col-1\">\n            <div className=\"dropdown\">\n              <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Language (言語)\n              </button>\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a className=\"dropdown-item\" onClick={this.handleEnglishClick()}>English</a>\n                <a className=\"dropdown-item\" onClick={this.handleJapaneseClick()}>日本人 (Japanese)</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h2>Demo 1 - Text coding:</h2>\n      <div className=\"description\">\n        This is a demo of the text classification model that codes parent-child interaction according to the DPICS. The samples below illustrate the coding output of the model.\n      </div>\n      <p>Enter your sentence below and click 'Code' to code it according to the DPICS.</p>\n      <div>\n        <input id=\"classify-new-text-input\" placeholder=\"i.e. 'Come play with me'\"/>\n        <div id=\"classify-new-text\" onClick={this.classifyText()}>Code</div>\n      </div>\n      <div id=\"table-wrapper\">\n        <div className=\"row\">\n          <div className=\"text\">Parent Sentence</div>\n\n          <div className=\"label\">Behavior Description</div>\n          <div className=\"label\">Command</div>\n          <div className=\"label\">Labeled Praise</div>\n          <div className=\"label\">Negative Talk</div>\n          <div className=\"label\">Neutral Talk</div>\n          <div className=\"label\">Question</div>\n          <div className=\"label\">Reflection</div>\n          <div className=\"label\">Unlabeled Praise</div>\n          <div className=\"label\">Wrong code?</div>\n        </div>\n        {this.state.sentences.map((value, key) => (\n          <div className=\"row\">\n            <div className=\"text\">{value.text}</div>\n            {value.pred[0] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n            {value.pred[1] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n            {value.pred[2] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n            {value.pred[3] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n            {value.pred[4] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n            {value.pred[5] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n            {value.pred[6] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n            {value.pred[7] == 1 ? <div className=\"label positive\">Likely</div> : <div className=\"label\">Unlikely</div>}\n            <div className=\"label\"><div className=\"flag-btn\" onClick={this.uploadFlagToServer(value.text,value.proba,1,this)}>Flag this</div></div>\n          </div>\n        ))}\n      </div>\n\n      <h2>Demo 2 - Speech coding (experimental):</h2>\n      <div className=\"description\">\n        This is a demo of the speech classification model that codes <b>spoken</b> parent-child interaction according to the DPICS. Make sure to use <a href=\"https://www.google.com/chrome/browser/\">Google Chrome</a> on Desktop or Android for this demo to work.\n      </div>\n      <p>\n          Click 'Start' when you start interacting with your child, 'Stop' when the interaction has ended, and 'Reset' to reset the demo.\n      </p>\n      <div className=\"wrapper2\">\n        <div className=\"start-meeting\" onClick={() => { startMeeting()}}>Start</div>\n        <div className=\"start-meeting\" onClick={() => { stopMeeting()}}>Stop</div>\n        <div className=\"start-meeting\" onClick={() => { resetMeeting()}}>Reset</div>\n      </div>\n\n      <div>DPICS counts:</div>\n      <div style={{width:\"50%\",height:\"450px\"}}>\n      <canvas id=\"bar-chart\" width=\"200\" height=\"150\"></canvas>\n      </div>\n\n      <h2>The related paper is published at PervasiveHealth 2019:</h2>\n      <p>We studied this coding tool as a system to help parents communicate. Make sure to check out our <a href=\"https://scholar.harvard.edu/files/bhb/files/specialtime_final_pervasivehealth19.pdf\">paper</a> for more details.\n      </p>\n      <p>Created by: <a href=\"https://scholar.harvard.edu/bhb\">Bernd Huber</a></p>\n      </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}